/*********************************************************************
	SYSTEM LampSystem
	IMPLEMENTATION LampImpl_cpp
	cip process Button interface header file for PROCESS Button
	Filename: INTF_Button.hpp
	generated by CIP Tool(R)
	
	activated code options:
		C++ code
		use message interface
	            naming option: channel  prefix
	        all types in shell
	        call context error function
	        'unsigned long' for delays
*********************************************************************/

#if !defined(__INTF_Button__)
    #define __INTF_Button__


#include "PROC_CipProcess.hpp"
#include "INTF_ButtonNames.hpp"
#include "INTF_usertypes.hpp"

namespace lampunit
{
    
	namespace lampcluster
	{
        
		/** 
		* class INTF_Button
		* interface for process Button
		*/
		class INTF_Button : 
			public cipmachine::PROC_CipProcess
		{
		friend class PROC_Button;
	public: 
            
		/** constructors / destructors */
		explicit INTF_Button(const char *i_processString) : 
			cipmachine::PROC_CipProcess(i_processString), 
			STATE(INTF_ButtonNames::released),
			MODE(INTF_ButtonNames::normal)
		{}

		INTF_Button(void){}
		virtual ~INTF_Button(void){}

		/** initialize the pointers to interaction processes */
		virtual void initInteraction(  
			void* i_Button,
			void* i_Lamp) = 0;

		/** INPORT EVENT_PORT */
		/** 
		* Trigger the process with message C1_Push
		* @calls  ERR_CipError  if the message has not been processed
		*/
		virtual void C1_Push(void) = 0;
		
		/** 
		* Trigger the process with message C1_Release
		* @calls  ERR_CipError  if the message has not been processed
		*/
		virtual void C1_Release(void) = 0;
		
	    
	protected: 
 
		/** status variables */

		INTF_ButtonNames::E_State STATE;
		INTF_ButtonNames::E_Mode MODE;

	private: 
            
		/** prohibitted default functions */
		INTF_Button(const INTF_Button&);
		INTF_Button& operator=(const INTF_Button&);

        }; // class INTF_Button

    } // namespace lampcluster
} // namespace lampunit

#endif // __INTF_Button__

/*********************************************************************
    End of cip process Button interface header for PROCESS Button
*********************************************************************/
/* Actifsource ID=[e2fd58fb-0973-11e3-b902-17aaca85d2fd,242979e4-b786-11ea-9e22-1112d6355503,7848c6d5-b785-11ea-9e22-1112d6355503,06ed7fd9-b786-11ea-9e22-1112d6355503,242979e3-b786-11ea-9e22-1112d6355503,242979e2-b786-11ea-9e22-1112d6355503,7848c70f-b785-11ea-9e22-1112d6355503,7848c6e8-b785-11ea-9e22-1112d6355503,7KC99Bkip655wFSLVvlLuo6gbfk=] */
