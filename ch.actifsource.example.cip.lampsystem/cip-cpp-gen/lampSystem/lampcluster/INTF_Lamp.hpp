/*********************************************************************
	SYSTEM LampSystem
	IMPLEMENTATION LampImpl_cpp
	cip process Lamp interface header file for PROCESS Lamp
	Filename: INTF_Lamp.hpp
	generated by CIP Tool(R)
	
	activated code options:
		C++ code
		use message interface
	            naming option: channel  prefix
	        all types in shell
	        call context error function
	        'unsigned long' for delays
*********************************************************************/

#if !defined(__INTF_Lamp__)
    #define __INTF_Lamp__


#include "PROC_CipProcess.hpp"
#include "INTF_LampNames.hpp"
#include "INTF_usertypes.hpp"

namespace lampunit
{
    
	namespace lampcluster
	{
        
		/** 
		* class INTF_Lamp
		* interface for process Lamp
		*/
		class INTF_Lamp : 
			public cipmachine::PROC_CipProcess
		{
		friend class PROC_Lamp;
	public: 
            
		/** constructors / destructors */
		explicit INTF_Lamp(const char *i_processString) : 
			cipmachine::PROC_CipProcess(i_processString), 
			STATE(INTF_LampNames::off_),
			MODE(INTF_LampNames::normal)
		{}

		INTF_Lamp(void){}
		virtual ~INTF_Lamp(void){}

		/** initialize the pointers to interaction processes */
		virtual void initInteraction(  
			void* i_Lamp) = 0;

		/** extension input functions */
		/** 
		* Trigger the process with inpulse TIMEUP_.
		*/
		virtual void TIMEUP_(void) = 0;
		
		/** pulse cast input functions */
		/** 
		* Trigger the process with inpulse off.
		*/
		virtual void BHV_off(void) = 0;
            
		/** 
		* Trigger the process with inpulse on.
		*/
		virtual void BHV_on(void) = 0;
            
	    
	protected: 
 
		/** status variables */

		INTF_LampNames::E_State STATE;
		INTF_LampNames::E_Mode MODE;

	private: 
            
		/** prohibitted default functions */
		INTF_Lamp(const INTF_Lamp&);
		INTF_Lamp& operator=(const INTF_Lamp&);

        }; // class INTF_Lamp

    } // namespace lampcluster
} // namespace lampunit

#endif // __INTF_Lamp__

/*********************************************************************
    End of cip process Lamp interface header for PROCESS Lamp
*********************************************************************/
/* Actifsource ID=[e2fd58fb-0973-11e3-b902-17aaca85d2fd,242979e4-b786-11ea-9e22-1112d6355503,7848c6d5-b785-11ea-9e22-1112d6355503,06ed7fd9-b786-11ea-9e22-1112d6355503,242979e3-b786-11ea-9e22-1112d6355503,242979e2-b786-11ea-9e22-1112d6355503,7848c70f-b785-11ea-9e22-1112d6355503,7848c705-b785-11ea-9e22-1112d6355503,BxdcDnrsQNRogPWuXn7iQpvX2gc=] */
