/*********************************************************************
	SYSTEM LampSystem
	IMPLEMENTATION LampImpl_c
	Header File for CIP SHELL sLampUnit
	Filename: sLampUnit.h
	generated by CIP Tool(R)
	
	activated code options:
		C code
		use channel interface
			naming option: use default prefix
		use postfix
			 LampUnit_HANS
		enable mode inspection
		'unsigned long' for delays
*********************************************************************/

#if !defined(_sLampUnit_hLampUnit_HANS_)
	#define _sLampUnit_hLampUnit_HANS_
/* Code Option Constants */

#if defined(_EINPUT__)
	#undef _EINPUT__
#endif 

#if defined(_PENDING__)
	#undef _PENDING__
#endif 

/* Channel Enumerations */

#if !defined(_eCHAN_LampUnit_HANS_)
	#define _eCHAN_LampUnit_HANS_

	enum eCHAN_LampUnit_HANS
		{C_ButtonEvents = 1, C_LampActions = 2};

#endif // _eCHAN_LampUnit_HANS_

/*********************************************************************
	CODE  GENERATION  FEATURE
	This global message enumeration can be used 
	for implementation purposes.
*********************************************************************/

enum eMSG_LampUnitLampUnit_HANS
	{F_C1_Push_ = 1, F_C1_Release_ = 2, F_C2_Bright_ = 3, F_C2_Dark_ = 4};

/********************************************************************/

#if !defined(_eMSG_ButtonEvents_HANS_)
	#define _eMSG_ButtonEvents_HANS_

	enum eMSG_ButtonEvents_HANS
		{C1_Push = 1, C1_Release = 2};

#endif // _eMSG_ButtonEvents_HANS_

#if !defined(_eMSG_LampActions_HANS_)
	#define _eMSG_LampActions_HANS_

	enum eMSG_LampActions_HANS
		{C2_Bright = 1, C2_Dark = 2};

#endif // _eMSG_LampActions_HANS_

/* Input Interface Type */

struct tIN_LampUnit_HANS
{
	void (*ButtonEvents) (enum eMSG_ButtonEvents_HANS);
};

/* Output Interface Type */

struct tOUT_LampUnit_HANS
{
	void (*LampActions) (enum eMSG_LampActions_HANS);
};


/* Trigger Interface Type */

struct tTRG_LampUnit_HANS
{
	void (*TICK_) (void);		/* increment CIP MACHINE time */
	void (*STEP_) (void);		/*  trigger CIP MACHINE transition */
	void (*CHAIN_) (void);		/* trigger pending chain CIP MACHINE transition */
	void (*TIMEUP_) (void);		/* trigger pending timeup CIP MACHINE transition */
	void (*READ_) (void);		/* trigger CIP MACHINE to read from internal message buffer */
	void (*AUTO_) (void);		/* trigger pending auto CIP MACHINE transition */
};

/* External Interface Declarations */

extern struct tIN_LampUnit_HANS IN_LampUnit_HANS;		/* Input Channel Interface defined in sLampUnit.c */
extern struct tOUT_LampUnit_HANS OUT_LampUnit_HANS;		/* Output Channel Interface defined in sLampUnit.c */
extern struct tTRG_LampUnit_HANS TRG_LampUnit_HANS;		/* Trigger Interface defined in sLampUnit.c */

/* Unit Initialization Function, defined in mLampUnit.c
	called by User to initialize CIP Machine
		returning 1 if successful
		returning 0 if failed */

int fINIT_LampUnit_HANS(void);

/* User defined Initialization Function for CIP Shell Interface Initialization 
	called by Unit Initialization Function */

void iCHAN_LampUnit_HANS(void);

#endif // _sLampUnit_hLampUnit_HANS_

/*********************************************************************
	End of CIP UNIT Header File for CIP SHELL sLampUnit
*********************************************************************/
/* Actifsource ID=[b7934a9b-259a-11e1-ae2f-a14f3e396de6,7848c712-b785-11ea-9e22-1112d6355503,7848c6d5-b785-11ea-9e22-1112d6355503,7848c72b-b785-11ea-9e22-1112d6355503,7848c710-b785-11ea-9e22-1112d6355503,7848c711-b785-11ea-9e22-1112d6355503,84Z7xoQoSrPtXv09UZNmBPWVGGo=] */
