/*********************************************************************
	SYSTEM LampSystem
	IMPLEMENTATION LampImpl_c
	Header File for CIP MACHINE mLampUnit
	Filename: mLampUnit.h
	generated by CIP Tool(R)
	
	activated code options:
		C code
		use channel interface
			naming option: use default prefix
		use postfix
			 LampUnit_HANS
		enable mode inspection
		'unsigned long' for delays
*********************************************************************/

#if !defined(_mLampUnit_hLampUnit_HANS_)
	#define _mLampUnit_hLampUnit_HANS_

/* Include Files */

#include <stdlib.h>
#include "sLampUnit.h"

/* Macro Definitions */

#if !defined(FALSE)
	#define FALSE 0
#endif // FALSE

#if !defined(TRUE)
	#define TRUE 1
#endif // TRUE

/* User Types */

//usetTypeTest

/* CIP Records */

#if !defined(_tCIPREC_recType_)
	#define _tCIPREC_recType_

	struct tCIPREC_recType
	{
		float field1; 
	};

#endif // _tCIPREC_recType_

/* Outpulse Types */
 
#if !defined(_eOUTPLS_LampUnit_HANS_)
	#define _eOUTPLS_LampUnit_HANS_

	enum eOUTPLS_LampUnit_HANS
		{/* LampCluster */ O2_off = 1, O2_on};

#endif // _eOUTPLS_LampUnit_HANS_

struct tOUTPLS_Button_HANS
{
	enum eOUTPLS_LampUnit_HANS name_;
};

union tOUTPLS_LampCluster_HANS
{
	struct tOUTPLS_Button_HANS OUTPLS_Button;
};

/* Global Output Type */

struct tCHAN_LampActions_HANS
{
	enum eMSG_LampActions_HANS name_;
};

union tCHAN_mLampUnit_HANS
{
	struct tCHAN_LampActions_HANS CHAN_LampActions;
};

struct tCHNOUT_mLampUnit_HANS
{
	union tCHAN_mLampUnit_HANS message_;
};

/* Timer- and Queue-Element */

struct tTMEL_mLampUnit_HANS
{
	unsigned char set_; /* Boolean */
	unsigned long end_;
};

struct tTMQE_mLampUnit_HANS
{
	struct tTMQE_mLampUnit_HANS *preced_;
	struct tTMQE_mLampUnit_HANS *next_;
	int proctype_;
};

/* Global Table Elements */
struct tTIMING_mLampUnit
{
	void  (*tkhndl_) (void);
	void (*tuhndl_)(void);
	int  set_;
};

/* Types for Process Button */

struct tPRSTAT_Button_HANS
{
	int STATE;
	int MODE;
};

union tSTATUS_Button_HANS
{
	struct tPRSTAT_Button_HANS write_access_;
	struct tPRSTAT_Button_HANS read_access_;
};

/* Types for Process Lamp */

struct tPRSTAT_Lamp_HANS
{
	int STATE;
	int MODE;
};

union tSTATUS_Lamp_HANS
{
	struct tPRSTAT_Lamp_HANS write_access_;
	struct tPRSTAT_Lamp_HANS read_access_;
};

struct tPRINST_Lamp_HANS
{
	struct tTMEL_mLampUnit_HANS timer_;
	struct tTMQE_mLampUnit_HANS timeup_;
};

#endif // _mLampUnit_hLampUnit_HANS_

/*********************************************************************
	End of Header File for CIP MACHINE mLampUnit
*********************************************************************/
/* Actifsource ID=[79d4b5d7-259a-11e1-ae2f-a14f3e396de6,7848c712-b785-11ea-9e22-1112d6355503,7848c6d5-b785-11ea-9e22-1112d6355503,7848c72b-b785-11ea-9e22-1112d6355503,7848c711-b785-11ea-9e22-1112d6355503,7848c710-b785-11ea-9e22-1112d6355503,BqbwZeRiAGKWNaaGw3YeqE2hbWU=] */
