/*********************************************************************
	SYSTEM U4_LiftWithAlarmMode_Loesung
	IMPLEMENTATION implementation
	Header File for CIP MACHINE mLiftWithAlarmMode
	Filename: mLiftWithAlarmMode.h
	generated by CIP Tool(R)
	
	activated code options:
		C code
		use message interface
			naming option: use default prefix
		use postfix
			LiftWithAlarmMode 
		enable mode inspection
		'unsigned long' for delays
*********************************************************************/

#if !defined(_mLiftWithAlarmMode_hLiftWithAlarmMode_)
	#define _mLiftWithAlarmMode_hLiftWithAlarmMode_

/* Include Files */

#include <stdlib.h>
#include "sLiftWithAlarmMode.h"

/* Macro Definitions */

#if !defined(FALSE)
	#define FALSE 0
#endif // FALSE

#if !defined(TRUE)
	#define TRUE 1
#endif // TRUE

/* Outpulse Types */
 
#if !defined(_eOUTPLS_LiftWithAlarmMode_)
	#define _eOUTPLS_LiftWithAlarmMode_

	enum eOUTPLS_LiftWithAlarmMode
		{/* LiftCluster */ O3_blocking = 1, O3_release, O4_push};

#endif // _eOUTPLS_LiftWithAlarmMode_

struct tOUTPLS_Alarmswitch
{
	enum eOUTPLS_LiftWithAlarmMode name_;
};

struct tOUTPLS_Button
{
	enum eOUTPLS_LiftWithAlarmMode name_;
};

union tOUTPLS_LiftCluster
{
	struct tOUTPLS_Alarmswitch OUTPLS_Alarmswitch;
	struct tOUTPLS_Button OUTPLS_Button;
};

/* Global Output Type */

struct tCHAN_Act_Motor
{
	enum eMSG_Act_Motor name_;
};

union tCHAN_mLiftWithAlarmMode
{
	struct tCHAN_Act_Motor CHAN_Act_Motor;
};

struct tCHNOUT_mLiftWithAlarmMode
{
	union tCHAN_mLiftWithAlarmMode message_;
};

/* Types for Process Alarmswitch */

struct tPRSTAT_Alarmswitch
{
	int STATE;
	int MODE;
};

union tSTATUS_Alarmswitch
{
	struct tPRSTAT_Alarmswitch write_access_;
	struct tPRSTAT_Alarmswitch read_access_;
};

/* Types for Process Button */

struct tPRSTAT_Button
{
	int STATE;
	int MODE;
};

union tSTATUS_Button
{
	struct tPRSTAT_Button write_access_;
	struct tPRSTAT_Button read_access_;
};

/* Types for Process LiftCar */

struct tPRSTAT_LiftCar
{
	int STATE;
	int MODE;
};

union tSTATUS_LiftCar
{
	struct tPRSTAT_LiftCar write_access_;
	struct tPRSTAT_LiftCar read_access_;
};

#endif // _mLiftWithAlarmMode_hLiftWithAlarmMode_

/*********************************************************************
	End of Header File for CIP MACHINE mLiftWithAlarmMode
*********************************************************************/
/* Actifsource ID=[79d4b5d7-259a-11e1-ae2f-a14f3e396de6,474f129b-2ffa-11e2-8ce2-c76b5b13ae26,741c1ae4-2ff8-11e2-8ce2-c76b5b13ae26,278e1b7e-2ffa-11e2-8ce2-c76b5b13ae26,47515c94-2ffa-11e2-8ce2-c76b5b13ae26,47515c8f-2ffa-11e2-8ce2-c76b5b13ae26,UeGnYJlYnTxLoyWi5N7ZswGk9aQ=] */
